{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","App.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","query","currentTarget","reset","className","onSubmit","this","htmlFor","type","onChange","name","ref","input","placeholder","id","Component","Gif","src","url","alt","NoGifs","GifList","gifs","results","data","length","map","gif","images","fixed_height","key","App","performSearch","axios","get","then","response","loading","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"gTAsCeA,E,4MAnCbC,MAAQ,CACNC,WAAY,I,EAGdC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAAOC,S,EAGvCC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKC,MAAML,OAC/BH,EAAES,cAAcC,S,uDAGR,IAAD,OACP,OACE,0BAAMC,UAAU,cAAcC,SAAUC,KAAKT,cAC3C,2BAAOO,UAAU,YAAYG,QAAQ,UAArC,UAGA,2BACEC,KAAK,SACLC,SAAUH,KAAKd,eACfkB,KAAK,SACLC,IAAK,SAACC,GAAD,OAAY,EAAKX,MAAQW,GAC9BC,YAAY,cAEd,4BAAQL,KAAK,SAASM,GAAG,SAASV,UAAU,iBAC1C,uBAAGA,UAAU,6BAAb,gB,GA7BeW,aCMVC,EANH,SAACjB,GAAD,OACV,wBAAIK,UAAU,YACZ,yBAAKa,IAAKlB,EAAMmB,IAAKC,IAAI,OCIdC,EANA,SAACrB,GAAD,OACb,wBAAIK,UAAU,WACZ,uBAAGA,UAAU,2BAAb,qCCcWiB,EAdC,SAACtB,GACf,IACIuB,EADEC,EAAUxB,EAAMyB,KAUtB,OAPEF,EADEC,EAAQE,OAAS,EACZF,EAAQG,KAAI,SAACC,GAAD,OACjB,kBAAC,EAAD,CAAKT,IAAKS,EAAIC,OAAOC,aAAaX,IAAKY,IAAKH,EAAIb,QAG3C,kBAAC,EAAD,MAGF,wBAAIV,UAAU,YAAYkB,ICyCpBS,E,kDAjDb,aAAe,IAAD,8BACZ,gBAWFC,cAAgB,WAAsB,IAArB/B,EAAoB,uDAAZ,QACvBgC,IACGC,IADH,iDAE8CjC,EAF9C,uDAIGkC,MAAK,SAACC,GACL,EAAK1C,SAAS,CACZ4B,KAAMc,EAASZ,KAAKA,KACpBa,SAAS,OAGZC,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAmCF,OAtBnD,EAAKjD,MAAQ,CACXgC,KAAM,GACNe,SAAS,GAJC,E,gEASZ/B,KAAK0B,kB,+BAoBL,OACE,6BACE,yBAAK5B,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,cAAd,aACA,kBAAC,EAAD,CAAYJ,SAAUM,KAAK0B,kBAG/B,yBAAK5B,UAAU,gBACZE,KAAKhB,MAAM+C,QACV,uBAAGjC,UAAU,OAAb,qCAEA,kBAAC,EAAD,CAASoB,KAAMlB,KAAKhB,MAAMgC,a,GA1CpBP,aCDlB2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6e518b09.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass SearchForm extends Component {\n  state = {\n    searchText: \"\",\n  };\n\n  onSearchChange = (e) => {\n    this.setState({ searchText: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSearch(this.query.value);\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\n        <label className=\"is-hidden\" htmlFor=\"search\">\n          Search\n        </label>\n        <input\n          type=\"search\"\n          onChange={this.onSearchChange}\n          name=\"search\"\n          ref={(input) => (this.query = input)}\n          placeholder=\"Search...\"\n        />\n        <button type=\"submit\" id=\"submit\" className=\"search-button\">\n          <i className=\"material-icons icn-search\">search</i>\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nconst Gif = (props) => (\n  <li className=\"gif-wrap\">\n    <img src={props.url} alt=\"\" />\n  </li>\n);\n\nexport default Gif;\n","import React from \"react\";\n\nconst NoGifs = (props) => (\n  <li className=\"no-gifs\">\n    <i className=\"material-icons icon-gif\">Oops, no GIFs match your query.</i>\n  </li>\n);\n\nexport default NoGifs;\n","import React from \"react\";\nimport Gif from \"./Gif\";\nimport NoGifs from \"./NoGifs\";\n\nconst GifList = (props) => {\n  const results = props.data;\n  let gifs;\n  if (results.length > 0) {\n    gifs = results.map((gif) => (\n      <Gif url={gif.images.fixed_height.url} key={gif.id} />\n    ));\n  } else {\n    gifs = <NoGifs />;\n  }\n\n  return <ul className=\"gif-list\">{gifs}</ul>;\n};\n\nexport default GifList;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport SearchForm from \"./Components/SearchForm\";\nimport GifList from \"./Components/GifList\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      gifs: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.performSearch();\n  }\n\n  performSearch = (query = \"corgi\") => {\n    axios\n      .get(\n        `https://api.giphy.com/v1/gifs/search?q=${query}&limit=24&api_key=h6z3Ktcvw3UmZC5KZRCWwJziJ1qYKdUg`\n      )\n      .then((response) => {\n        this.setState({\n          gifs: response.data.data,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"main-header\">\n          <div className=\"inner\">\n            <h1 className=\"main-title\">GifSearch</h1>\n            <SearchForm onSearch={this.performSearch} />\n          </div>\n        </div>\n        <div className=\"main-content\">\n          {this.state.loading ? (\n            <p className=\"red\">loading... bandwidth what a drag.</p>\n          ) : (\n            <GifList data={this.state.gifs} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}